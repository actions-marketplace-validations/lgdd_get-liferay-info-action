name: "Get Liferay Info"
description: >
  Get current edition, major version and product name from your workspace.
  Also fetch latest minor version and product name available for your current edition and major version.
author: "lgdd"
branding:
  icon: "info"
  color: "blue"

inputs:
  workspace-directory:
    description: >
      Path to your workspace if different from root directory (e.g. './liferay').
      It will be use in this actions steps for the 'working-directory' directive.
    required: false
    default: .

outputs:
  current-product-name:
    description: "Current value for liferay.workspace.product in gradle properties (e.g. portal-7.4-ga78)"
    value: ${{ steps.get-liferay-info.outputs.current-product-name }}
  current-edition:
    description: "Current Liferay Edition: dxp or portal."
    value: ${{ steps.get-liferay-info.outputs.current-edition }}
  current-major-version:
    description: "Current Liferay DXP/Portal major version (e.g. 7.4)"
    value: ${{ steps.get-liferay-info.outputs.current-major-version }}
  current-minor-version:
    description: "Current Liferay DXP/Portal minor version (e.g. ga78)"
    value: ${{ steps.get-liferay-info.outputs.current-minor-version }}
  latest-product-name:
    description: "Latest value for liferay.workspace.product in gradle properties (e.g. portal-7.4-ga79)"
    value: ${{ steps.get-liferay-info.outputs.latest-product-name }}
  latest-product-version-name:
    description: "Latest name of the version for your current edition of Liferay (e.g. 'Portal 7.4 GA79')"
    value: ${{ steps.get-liferay-info.outputs.latest-product-version-name }}
  latest-minor-version:
    description: "Latest Liferay DXP/Portal minor version (e.g. ga79)"
    value: ${{ steps.get-liferay-info.outputs.latest-minor-version }}

runs:
  using: composite
  steps:
    - name: Get Current Product Name
      shell: bash
      working-directory: ${{ inputs.workspace-directory }}
      run: |
        echo "LFR_CURRENT_PRODUCT_NAME=$(cat gradle.properties | grep liferay.workspace.product= | cut -d '=' -f2)" >> $GITHUB_ENV
    - name: Get Liferay Info
      id: get-liferay-info
      uses: actions/github-script@v6
      with:
        script: |
          const { LFR_CURRENT_PRODUCT_NAME } = process.env;
          const currentProductSplit = LFR_CURRENT_PRODUCT_NAME.split('-');
          const currentEdition = currentProductSplit[0]
          const currentVersion = currentProductSplit[1]
          const currentVersionNoDot = currentVersion.replaceAll('.', '')
          const liferayProductInfoUrl =
            `https://github.com/lgdd/liferay-product-info/raw/main/${currentEdition}_${currentVersionNoDot}_product_info.json`;

          fetch(liferayProductInfoUrl, { method: 'Get' })
            .then((res) => res.json())
            .then((json) => {
              const latestProduct = json[json.length - 1];
              const latestProductSplit = latestProduct.name.split('-');
              const latestMinorVersion = latestProductSplit[2]

              core.setOutput("current-product-name", LFR_CURRENT_PRODUCT_NAME);
              core.setOutput("current-edition", currentEdition);
              core.setOutput("current-major-version", currentVersion);
              core.setOutput("current-minor-version", currentVersion);
              core.setOutput("latest-product-name", latestProduct.name);
              core.setOutput("latest-product-version-name", latestProduct.liferayProductVersion);
              core.setOutput("latest-minor-version", latestMinorVersion);
            });
